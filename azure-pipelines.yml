trigger:
  branches:
      include:
      - master
      - develop
      - feature/*
pool:
  vmImage: 'ubuntu-18.04'
stages:
- stage: Build
  jobs:
  - job: Build_Dotnet
    variables:
      buildConfiguration: 'Release'

    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration)'
      displayName: dotnet build $(buildConfiguration)
    - task: DotNetCoreCLI@2
      inputs:
        command: publish
        publishWebProjects: false
        projects: '**/ShopAction.Api.csproj'
        arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: false
      displayName: dotnet publish --configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: $(Build.ArtifactStagingDirectory)
        ArtifactName: ShopAction
      displayName: path to publish is $(Build.ArtifactStagingDirectory)
- stage: deploy
  jobs:
  - deployment: DeployWeb
    displayName: deploy Web App
    pool:
      vmImage: 'Ubuntu-latest'
    # creates an environment if it doesn't exist
    environment: 'Ubuntu'
    strategy:
      runOnce:
        deploy:
          steps:
          - script: echo Hello world

    

